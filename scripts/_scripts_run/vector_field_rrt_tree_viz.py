import time

from utils import *
from _controller import *
from _plot import *
from icecream import ic
import numpy as np

class Node:
    def __init__(self, n: list):
        self.x = n[0]
        self.y = n[1]
        self.parent = None

if __name__ == "__main__":

	# TODO: Read json trajectory from moveit and rrt tree
	traj, num_path_points = open_json('qtrjs.json')  # Get 2d trajectory generated by MoveIt
	xy_traj = get_x_y_traj(traj)

	rrt_path = load_rrt_path('path_rrt.npy') / 100  # numpy.ndarray
	rrt_path = np.around(rrt_path, 2)
	graph_rrt = load_rrt_nodes_list("graph_rrt.npy") / 100  # numpy.ndarray(np.array)
	graph_rrt = np.around(graph_rrt, 2)
	rrt_vertex = load_rrt_vertex("vertex_rrt.npy")
	graph_rrt_son, graph_rrt_father = split_son_father(deepcopy(graph_rrt))

	fig, ax = plt.subplots()  # TODO: Initialize fig

	min_x = -1.5
	min_y = -1.5
	max_x = 1.5
	max_y = 1.5
	n_sample = 301
	x = np.linspace(min_x, max_x, n_sample)
	y = np.linspace(min_y, max_y, n_sample)
	XY = np.meshgrid(x, y)  # TODO: So each step is 0.01,  XY is a list

	start_time = time.time()

	# Get the velocity map with dimension np.array((301x301, 2))
	uv = cascade_control_all_nodes_rrtTree_viz(graph_rrt_son, graph_rrt_father)  # TODO: changed to rrt graph 08.04

	vel_x = np.reshape(uv[:, 0], (n_sample, n_sample))
	vel_y = np.reshape(uv[:, 1], (n_sample, n_sample))

	speed = (vel_x ** 2 + vel_y ** 2) ** (1 / 2)
	lw = 5 * speed / speed.max()

	ax.streamplot(XY[0], XY[1], vel_x, vel_y,
				  density=[0.5, 1.],
				  linewidth=1.,
				  color=speed,
				  )  # TODO: Draw the vector field

	left, bottom, width, height = (0.35, 0.35, 0.3, 0.3)
	ax.add_patch(Rectangle((left, bottom), width, height, facecolor="black", alpha=0.5))  # TODO: Draw the box

	ax.set_title('Vector field')
	ax.grid(True)
	ax.set_xlim(-1.5, 1.5)
	ax.set_ylim(-1.5, 1.5)

	print("--- %s seconds!!! ---" % (time.time() - start_time))

	myfig = plt.gcf()
	t = time.strftime("%Y-%m-%d-%H_%M_%S", time.localtime())
	myfig.savefig('vector_field/rrt_tree_exp_{}.png'.format(t), dpi=300)

	plt.show()